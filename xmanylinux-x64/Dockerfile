FROM dockcross/manylinux-x64

ENV DEFAULT_DOCKCROSS_IMAGE dockcross/xmanylinux-x64

ADD fix.sh fix.sh

RUN bash fix.sh

RUN yum -y install xz

ENV PATH="/opt/python/cp27-cp27mu/bin/:${PATH}"

# LLVM & Clang
RUN wget http://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz \
    && xz --decompress llvm-6.0.0.src.tar.xz && tar xf llvm-6.0.0.src.tar \
    && rm llvm-6.0.0.src.tar \
    && cd llvm-6.0.0.src \
    && mkdir cbuild && cd cbuild \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/llvm60 -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-unknown-linux-gnu \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf llvm-6.0.0.src && ldconfig

RUN wget http://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz \
    && xz --decompress cfe-6.0.0.src.tar.xz && tar xf cfe-6.0.0.src.tar \
    && rm cfe-6.0.0.src.tar \
    && cd cfe-6.0.0.src \
    && mkdir cbuild && cd cbuild \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/llvm60 -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-unknown-linux-gnu \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf cfe-6.0.0.src && ldconfig

RUN wget http://releases.llvm.org/6.0.0/lld-6.0.0.src.tar.xz \
    && xz --decompress lld-6.0.0.src.tar.xz && tar xf lld-6.0.0.src.tar \
    && rm lld-6.0.0.src.tar \
    && cd lld-6.0.0.src \
    && mkdir cbuild && cd cbuild \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/llvm60 \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf lld-6.0.0.src && ldconfig

# Missing base libraries and software
RUN wget ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz \
    && tar xvf libffi-3.2.1.tar.gz \
    && rm libffi-3.2.1.tar.gz \
    && cd libffi-3.2.1 \
    && ./configure --prefix=/usr --libdir=/usr/lib64 --enable-static --disable-shared CFLAGS=-fPIC \
    && make -j4 && make install \
    && ln -s /usr/lib/libffi-3.2.1/include /usr/include/libffi \
    && cd .. && rm -rf libffi-3.2.1 && ldconfig

RUN yum install -y libX11-devel libXau-devel libXext-devel libXrender-devel

RUN yum install -y libxslt

RUN wget --no-check-certificate https://xcb.freedesktop.org/dist/xcb-proto-1.7.1.tar.gz \
    && tar xvf xcb-proto-1.7.1.tar.gz \
    && rm xcb-proto-1.7.1.tar.gz \
    && cd xcb-proto-1.7.1 \
    && ./configure --prefix=/usr --libdir=/usr/lib64 --enable-static --enable-shared CFLAGS=-fPIC \
    && make -j4 && make install \
    && cd .. && rm -rf xcb-proto-1.7.1 && ldconfig

RUN wget --no-check-certificate https://xcb.freedesktop.org/dist/libpthread-stubs-0.3.tar.gz \
    && tar xvf libpthread-stubs-0.3.tar.gz \
    && rm libpthread-stubs-0.3.tar.gz \
    && cd libpthread-stubs-0.3 \
    && ./configure --prefix=/usr --libdir=/usr/lib64 --enable-static --enable-shared CFLAGS=-fPIC \
    && make -j3 && make install \
    && cd .. && rm -rf libpthread-stubs-0.3 && ldconfig

RUN wget --no-check-certificate https://xcb.freedesktop.org/dist/libxcb-1.8.1.tar.gz \
    && tar xvf libxcb-1.8.1.tar.gz \
    && rm libxcb-1.8.1.tar.gz \
    && cd libxcb-1.8.1 \
    && ./configure --prefix=/usr --libdir=/usr/lib64 --enable-static --enable-shared CFLAGS=-fPIC \
    && make -j4 && make install \
    && cd .. && rm -rf libxcb-1.8.1 && ldconfig

RUN yum install -y fontconfig-devel

RUN yum -y install pcre-devel

# Java
RUN cd /opt/ \
    && wget --no-cookies --no-check-certificate --header "Cookie: oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz" -O jdk-8u181-linux-x64.tar.gz \
    && tar xzf jdk-8u181-linux-x64.tar.gz \
    && rm jdk-8u181-linux-x64.tar.gz

# Maven
RUN cd /opt \
    && wget --no-check-certificate http://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz \
    && tar xzf apache-maven-3.3.9-bin.tar.gz \
    && rm apache-maven-3.3.9-bin.tar.gz

# Swig
RUN wget --no-check-certificate http://downloads.sourceforge.net/project/swig/swig/swig-3.0.12/swig-3.0.12.tar.gz \
    && tar xvf swig-3.0.12.tar.gz \
    && rm swig-3.0.12.tar.gz \
    && cd swig-3.0.12 \
    && ./configure --prefix=/usr --libdir=/usr/lib64 \
    && make -j4 && make install \
    && cd .. && rm -rf swig-3.0.12 && ldconfig

# Reset PATH
ENV PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ENV LD_LIBRARY_PATH="/usr/local/lib64:/usr/local/lib"

# Configure default environment
ENV PATH="/opt/python/cp27-cp27mu/bin/:${PATH}"
ENV PATH="/opt/llvm60/bin:${PATH}"
ENV JAVA_HOME="/opt/jdk1.8.0_171"
ENV JRE_HOME="/opt/jdk1.8.0_171/jre"
ENV PATH="/opt/jdk1.8.0_171/bin:/opt/jdk1.8.0_171/jre/bin:${PATH}"
ENV PATH="/opt/apache-maven-3.3.9/bin:${PATH}"
ENV LD_LIBRARY_PATH="/opt/llvm60/lib:${LD_LIBRARY_PATH}"

ENV CROSS_TRIPLE x86_64-linux-gnu
ENV CROSS_ROOT /opt/llvm60/bin
ENV AS=${CROSS_ROOT}/llvm-as \
    AR=${CROSS_ROOT}/llvm-ar \
    CC=${CROSS_ROOT}/clang \
    CPP=${CROSS_ROOT}/clang-cpp \
    CXX=${CROSS_ROOT}/clang++ \
    LD=${CROSS_ROOT}/ld.lld \
    LDFLAGS=-fuse-ld=lld
COPY Toolchain.cmake ${CROSS_ROOT}/../lib/
ENV CMAKE_TOOLCHAIN_FILE="/opt/llvm60/lib/Toolchain.cmake"

# OpenMP
ADD 0001-openmp-6.0.0.patch /tmp/0001-openmp-6.0.0.patch

RUN wget http://releases.llvm.org/6.0.0/openmp-6.0.0.src.tar.xz \
    && xz --decompress openmp-6.0.0.src.tar.xz && tar xf openmp-6.0.0.src.tar \
    && rm openmp-6.0.0.src.tar \
    && cd openmp-6.0.0.src \
    && patch -p1 < /tmp/0001-openmp-6.0.0.patch \
    && rm /tmp/0001-openmp-6.0.0.patch \
    && mkdir cbuild && cd cbuild \
    && CXXFLAGS="-fPIC" CFLAGS="-fPIC" cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib64 \
    && CXXFLAGS="-fPIC" CFLAGS="-fPIC" cmake --build . -- -j4 && CXXFLAGS="-fPIC" CFLAGS="-fPIC" cmake --build . --target install \
    && cd .. && cd .. && rm -rf openmp-6.0.0.src && ldconfig

# XSD
RUN wget --no-check-certificate https://www.codesynthesis.com/download/xsd/4.0/linux-gnu/x86_64/xsd-4.0.0-x86_64-linux-gnu.tar.bz2 \
    && tar xvf xsd-4.0.0-x86_64-linux-gnu.tar.bz2 \
    && rm xsd-4.0.0-x86_64-linux-gnu.tar.bz2 \
    && cp -R xsd-4.0.0-x86_64-linux-gnu/bin/* /usr/bin \
    && cp -R xsd-4.0.0-x86_64-linux-gnu/libxsd/* /usr/include \
    && rm -rf xsd-4.0.0-x86_64-linux-gnu

ENV CFLAGS="-march=x86-64 -mtune=generic"
ENV CXXFLAGS="-march=x86-64 -mtune=generic"
ENV FFLAGS="-march=x86-64 -mtune=generic"
